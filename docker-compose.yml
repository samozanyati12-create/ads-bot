version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: vk_ads_bot
      POSTGRES_USER: bot_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bot_network
    restart: unless-stopped

  bot:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://bot_user:${DB_PASSWORD}@postgres:5432/vk_ads_bot
      - BOT_TOKEN=${BOT_TOKEN}
      - VK_APP_ID=${VK_APP_ID}
      - VK_APP_SECRET=${VK_APP_SECRET}
      - VK_REDIRECT_URI=${VK_REDIRECT_URI}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=false
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - bot_network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:
    version: '3.8'

networks:
  bareos_network:
    driver: bridge

services:
  postgres:
    image: public.ecr.aws/docker/library/postgres:14-alpine
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: <ваш_пароль_администратора_бд>
    networks:
      - bareos_network
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - ~/bareos_database:/var/lib/postgresql/data

  adminer:
    image: public.ecr.aws/docker/library/adminer:4
    container_name: adminer_ui
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: postgres_db
      ADMINER_DEFAULT_DB: bareos
      ADMINER_DEFAULT_USER: bareos
      ADMINER_DEFAULT_DBTYPE: postgres
    networks:
      - bareos_network
    ports:
      - "8080:8080"
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local

networks:
  bot_network:

    driver: bridge
